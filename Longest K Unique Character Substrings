import java.util.*;
public class Main {
    public static void main (String args[]) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();

        while (T > 0) {
            String s = scanner.next();
            int k = scanner.nextInt();

            int result = findLongestSubstringLength(s, k);
            System.out.println(result);

            T--;
        }

        scanner.close();
    }

    public static int findLongestSubstringLength(String s, int k) {
        int n = s.length();
        int left = 0, right = 0;
        int uniqueCount = 0;
        int maxLength = -1;
        HashMap<Character, Integer> charCount = new HashMap<>();

        while (right < n) {
            char currentChar = s.charAt(right);
            charCount.put(currentChar, charCount.getOrDefault(currentChar, 0) + 1);

            if (charCount.size() <= k) {
                maxLength = Math.max(maxLength, right - left + 1);
            } else {
                while (charCount.size() > k) {
                    char leftChar = s.charAt(left);
                    charCount.put(leftChar, charCount.get(leftChar) - 1);
                    if (charCount.get(leftChar) == 0) {
                        charCount.remove(leftChar);
                    }
                    left++;
                }
            }

            right++;
        }

        return maxLength;
    }
}
